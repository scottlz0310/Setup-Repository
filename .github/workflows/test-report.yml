name: Test Report

on:
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write
  issues: write

jobs:
  test-report:
    name: Test Report
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion != 'skipped'
    permissions:
      contents: read
      actions: read
      checks: write
      pull-requests: write
      issues: write

    steps:
    - name: Download test artifacts
      uses: actions/github-script@v7
      with:
        script: |
          try {
            console.log('Listing artifacts for workflow run:', ${{ github.event.workflow_run.id }});

            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }},
            });

            console.log(`Found ${artifacts.data.artifacts.length} artifacts`);

            let downloadCount = 0;
            for (const artifact of artifacts.data.artifacts) {
              if (artifact.name.startsWith('test-results-')) {
                console.log(`Downloading artifact: ${artifact.name}`);

                try {
                  const download = await github.rest.actions.downloadArtifact({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    artifact_id: artifact.id,
                    archive_format: 'zip',
                  });

                  const fs = require('fs');
                  fs.writeFileSync(`${artifact.name}.zip`, Buffer.from(download.data));
                  downloadCount++;
                  console.log(`Successfully downloaded: ${artifact.name}`);
                } catch (downloadError) {
                  console.log(`Failed to download ${artifact.name}:`, downloadError.message);
                }
              }
            }

            if (downloadCount === 0) {
              console.log('No test result artifacts found or downloaded');
            } else {
              console.log(`Successfully downloaded ${downloadCount} test result artifacts`);
            }
          } catch (error) {
            console.log('Error in artifact download:', error.message);
            // Continue execution even if artifact download fails
          }

    - name: Extract test results
      run: |
        for file in test-results-*.zip; do
          if [ -f "$file" ]; then
            unzip -o "$file"
          fi
        done

    - name: Checkout code for test reporter
      uses: actions/checkout@v4

    - name: Check for test results
      id: check-results
      run: |
        if ls test-results*.xml 1> /dev/null 2>&1; then
          echo "found=true" >> $GITHUB_OUTPUT
          echo "✅ Test result files found:"
          ls -la test-results*.xml
        else
          echo "found=false" >> $GITHUB_OUTPUT
          echo "⚠️ No test result files found"
          echo "Available files:"
          ls -la || echo "No files in current directory"
        fi

    - name: Publish test results
      uses: dorny/test-reporter@v1
      if: steps.check-results.outputs.found == 'true'
      with:
        name: Test Results
        path: 'test-results*.xml'
        reporter: java-junit
        fail-on-error: false
        max-annotations: 50

    - name: Create fallback summary
      if: steps.check-results.outputs.found == 'false'
      run: |
        echo "## ⚠️ Test Report Status" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "No test result files were found to generate a report." >> $GITHUB_STEP_SUMMARY
        echo "This may indicate:" >> $GITHUB_STEP_SUMMARY
        echo "- The CI/CD Pipeline workflow did not complete successfully" >> $GITHUB_STEP_SUMMARY
        echo "- Test artifacts were not uploaded" >> $GITHUB_STEP_SUMMARY
        echo "- Test result files were not generated" >> $GITHUB_STEP_SUMMARY

    - name: Comment test results on PR
      uses: actions/github-script@v7
      if: github.event.workflow_run.event == 'pull_request'
      with:
        script: |
          const fs = require('fs');

          // テスト結果の要約を作成
          let summary = '## 🧪 Test Results Summary\n\n';

          try {
            if (fs.existsSync('coverage.xml')) {
              summary += '✅ Coverage report generated\n';
            }

            if (fs.existsSync('test-results.xml')) {
              summary += '✅ Test results available\n';
            }

            summary += '\n📊 Detailed results are available in the workflow artifacts.';

            // PRにコメントを投稿
            const { data: pullRequests } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:${github.event.workflow_run.head_branch}`
            });

            if (pullRequests.length > 0) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pullRequests[0].number,
                body: summary
              });
            }
          } catch (error) {
            console.log('Error creating test summary:', error);
          }
