name: Extended CI Matrix

on:
  schedule:
    # 毎日午前2時（UTC）に実行
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      python_versions:
        description: 'Python versions to test (comma-separated)'
        required: false
        default: '3.9,3.10,3.11,3.12,3.13'

jobs:
  extended-matrix-test:
    name: Extended Matrix Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Ubuntu (最新版のみ)
          - os: ubuntu-22.04
            python-version: "3.11"
          - os: ubuntu-22.04
            python-version: "3.12"
          - os: ubuntu-22.04
            python-version: "3.13"
          # Windows (最新版のみ)
          - os: windows-2022
            python-version: "3.11"
          - os: windows-2022
            python-version: "3.12"
          - os: windows-2022
            python-version: "3.13"
          # macOS (最新版のみ)
          - os: macos-13
            python-version: "3.11"
          - os: macos-13
            python-version: "3.12"
          - os: macos-13
            python-version: "3.13"
      fail-fast: false
      max-parallel: 3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install uv (Unix)
      if: runner.os != 'Windows'
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install and setup uv (Windows)
      if: runner.os == 'Windows'
      run: |
        # Windows用のuv設定スクリプトを実行
        .\scripts\windows-uv-setup.ps1 -Verbose
      shell: powershell

    - name: Verify uv installation and PATH
      run: |
        echo "PATH verification:"
        echo $env:PATH
        uv --version
        echo "uv installation verified successfully"
      shell: powershell
      if: runner.os == 'Windows'

    - name: Verify uv installation (Unix)
      if: runner.os != 'Windows'
      run: |
        echo "PATH verification:"
        echo $PATH
        uv --version
        echo "uv installation verified successfully"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Create virtual environment
      run: uv venv --python ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --dev

    - name: Verify installation
      run: |
        uv run python --version
        uv run python -c "import sys; print(f'Python {sys.version}')"
        uv run python -c "from setup_repo import __version__; print(f'Package version: {__version__}')"

    - name: Run comprehensive tests
      run: |
        uv run pytest tests/ -v --tb=short
        uv run python main.py --help

    - name: Test platform-specific functionality
      run: |
        uv run python -c "
        from setup_repo.platform_detector import detect_platform
        platform = detect_platform()
        print(f'Platform: {platform.name} - {platform.display_name}')
        print(f'Shell: {platform.shell}')
        print(f'Python command: {platform.python_cmd}')
        "

  performance-test:
    name: Performance Test
    runs-on: ubuntu-latest
    needs: extended-matrix-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Set up Python
      run: uv python install 3.11

    - name: Install dependencies
      run: uv sync --dev

    - name: Run performance tests
      run: |
        uv run pytest tests/ -m "slow" -v --tb=short || echo "No slow tests found"

    - name: Benchmark startup time
      run: |
        echo "Measuring startup time..."
        time uv run python main.py --help > /dev/null
        time uv run python -c "from setup_repo.cli import main; main(['--help'])" > /dev/null