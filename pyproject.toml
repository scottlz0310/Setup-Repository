[build-system]
requires = [
    "hatchling",
]
build-backend = "hatchling.build"

[project]
name = "setup-repository"
version = "1.3.1"
description = "🚀 クロスプラットフォーム対応のGitHubリポジトリセットアップ・同期ツール"
readme = "README.md"
license = "MIT"
authors = [
    { name = "Setup Repository Contributors" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Version Control :: Git",
]
requires-python = ">=3.11"
dependencies = [
    "rg>=0.0.75",
    "requests>=2.25.0",
    "bandit>=1.8.6",
    "psutil>=5.9.0",
]

[project.scripts]
setup-repo = "setup_repo.cli:main"

[project.urls]
Homepage = "https://github.com/scottlz0310/Setup-Repository"
Repository = "https://github.com/scottlz0310/Setup-Repository"
Issues = "https://github.com/scottlz0310/Setup-Repository/issues"

[dependency-groups]
dev = [
    "coverage>=7.10.6",
    "mypy>=1.18.1",
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-json-report>=1.5.0",
    "pytest-xdist>=3.8.0",
    "pytest-benchmark>=4.0.0",
    "pytest-timeout>=2.4.0",
    "ruff>=0.13.0",
    "black>=25.1.0",
    "tomli-w>=1.0.0",
    "types-psutil>=7.0.0.20250822",
    "types-requests>=2.32.4.20250809",
    "setuptools>=80.9.0",
]
security = [
    "safety>=3.6.0",
    "bandit>=1.8.6",
    "pip-licenses>=5.0.0",
]

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
select = [
    "E",
    "F",
    "W",
    "I",
    "N",
    "UP",
    "B",
    "A",
    "C4",
    "T20",
    "SIM",
    "TCH",
]
ignore = [
    "T201",
    "SIM108",
]

[tool.ruff.lint.isort]
known-first-party = [
    "setup_repo",
]
force-single-line = false
split-on-trailing-comma = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.hatch.build.targets.wheel]
packages = [
    "src/setup_repo",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_any_unimported = false
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_generics = false
disallow_subclassing_any = false
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = true
warn_unreachable = false
strict_optional = false
show_error_codes = true
show_column_numbers = true

[[tool.mypy.overrides]]
module = [
    "tests.*",
]
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
addopts = "-v --tb=short --disable-warnings -p xdist -p pytest_cov -p pytest_jsonreport -p timeout -n auto --dist=worksteal --junit-xml=output/test-results.xml --json-report --json-report-file=output/test-report.json --cov=src/setup_repo --cov-report=term-missing --cov-report=html:output/htmlcov --timeout=120"
markers = [
    "unit: 単体テスト",
    "integration: 統合テスト",
    "windows: Windows固有テスト",
    "unix: Unix系固有テスト",
    "macos: macOS固有テスト",
    "slow: 実行時間の長いテスト",
    "network: ネットワーク接続が必要なテスト",
    "performance: パフォーマンステスト",
    "stress: ストレステスト",
    "cross_platform: クロスプラットフォームテスト",
    "security: セキュリティテスト",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = [
    "src/setup_repo",
]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.*",
]

[tool.coverage.report]
fail_under = 80
show_missing = true
skip_covered = false
skip_empty = false
precision = 2
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "if TYPE_CHECKING:",
    "if platform.system\\(\\)",
    "if __debug__:",
]

[tool.coverage.html]
directory = "output/htmlcov"
title = "Setup Repository Coverage Report"

[tool.coverage.xml]
output = "output/coverage.xml"

[tool.bandit]
exclude_dirs = [
    "tests",
    "venv",
    ".venv",
    "build",
    "dist",
]
skips = [
    "B101",
    "B603",
    "B607",
    "B404",
    "B604",
    "B310",
    "B108",
]
severity = "medium"
confidence = "medium"

[tool.bandit.assert_used]
skips = [
    "*_test.py",
    "test_*.py",
]

[tool.security]
local_mode = true
strict_mode = false
required_tools = [
    "bandit",
    "safety",
]
optional_tools = [
    "trufflehog",
    "pip-licenses",
]
allow_tool_failures = true
fallback_mode = true

[[tool.uv.index]]
name = "safety"
url = "https://pkgs.safetycli.com/repository/scottlz-team/project/setup-repository/pypi/simple/"
default = false
